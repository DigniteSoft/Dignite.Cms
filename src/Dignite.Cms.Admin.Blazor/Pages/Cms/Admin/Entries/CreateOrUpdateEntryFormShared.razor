@using Dignite.Abp.FieldCustomizing
@using Dignite.Cms.Localization
@inherits ComponentBase

<Row>
    <Column ColumnSize="ColumnSize.Is8">
        <Card Background="@Background.White">
            <CardBody>    
                <Field>
                    <FieldLabel>@L["SelectPage"]</FieldLabel>
                    <AntDesign.TreeSelect TItem="Dignite.Cms.Pages.PageDto" 
                        Style="width:100%;"
                        DataSource="allPages.Items"
                        Value="@Entry.PageId.ToString()"
                        ValueChanged="@OnPageListSelected"
                        Placeholder="@L["SelectPage"]"
                        AllowClear
                        TitleExpression="data => data.Title"
                        KeyExpression="data => data.Id.ToString()"
                        ChildrenExpression="data => data.Children"
				        IsLeafExpression="data => data.Children == null "
                        TreeDefaultExpandAll>
                    </AntDesign.TreeSelect>
                </Field>            
                <Validation MessageLocalizer="@LH.Localize">
                    <Field>
                        <Blazorise.FieldLabel>@L["Title"]</Blazorise.FieldLabel>
                        <Blazorise.TextEdit @bind-Text="@Entry.Title">
                            <Feedback>
                                <Blazorise.ValidationError/>
                            </Feedback>
                        </Blazorise.TextEdit>
                    </Field>
                </Validation>
                @if (Section != null)
                {
                    <!------------- field definitions ------------------------------------->
                    @foreach (var fd in Section.FieldDefinitions)
                    {
                        var component = fieldControlComponentSelector.Get(fd.FieldControlProviderName);
                        var parameters = new Dictionary<string, object>();
                        parameters.Add("CustomizeField", new Abp.FieldCustomizing.CustomizeField(Entry, fd));
                        <DynamicComponent Type="@component.GetType()" Parameters="@parameters"></DynamicComponent>
                    }   
                }

            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">        
        <Blazorise.Field>
            <Blazorise.Check TValue="bool" @bind-Checked="@Entry.IsActive">@L["IsActive"]</Blazorise.Check>
        </Blazorise.Field>
        <Validation MessageLocalizer="@LH.Localize">
            <Field>
                <Blazorise.FieldLabel>@L["Slug"]</Blazorise.FieldLabel>
                <Blazorise.TextEdit @bind-Text="@Entry.Slug">
                    <Feedback>
                        <Blazorise.ValidationError/>
                    </Feedback>
                </Blazorise.TextEdit>
            </Field>
        </Validation>
        <Validation MessageLocalizer="@LH.Localize">
            <Field>
                <FieldLabel>@L["PublishTime"]</FieldLabel>
                <DateEdit TValue="DateTime" InputMode="DateInputMode.DateTime" @bind-Date="@Entry.PublishTime">                    
                    <Feedback>
                        <Blazorise.ValidationError/>
                    </Feedback>
                </DateEdit>
            </Field>
        </Validation>
    </Column>
</Row>
